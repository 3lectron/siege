=pod

=head1 NAME

$_PROGRAM is a HTTP/FTP load tester and benchmarking utility. 

=head1 SYNOPSIS

$_PROGRAM [I<option>]

=head1 DESCRIPTION

$_PROGRAM is a multi-threaded HTTP/FTP load tester and benchmarking utility.
It supports most of the features detailed in RFCs 2616 (HTTP) and 959 (FTP).
Properties can be set at both from the command line and in a configuration
file. When the same propertie is set in both locations, the command line takes
precedent.

The default configuration file is $HOME/.siege/siege.conf If you don't have
a $HOME/.siege directory and a siege.conf and cookies.txt file, siege will 
generate a new config directory when it runs. You can generate your configu
directory with the following command: siege.config 

=head1 OPTIONS

=head2 Option Syntax


=head2 Startup Options

=over 4

=item B<-V>, B<--version>

Displays the $_PROGRAM release version and copyright information. 

=item B<-h>, B<--help>

Prints a help message describing $_PROGRAM's command-line options.

=item B<-C>, B<--config>

Prints a detailed summary of all the currently configured options, most of 
which are sent in $HOME/.siege/siege.conf 

=item B<-v>, B<--vebose>

This directive puts $_PROGRAM into verbose mode which is actually a default 
setting. This command-line option is useful when the config file is set to
'verbose = false' since it will allow you to override that.

By default $_PROGRAM's verbose output is displayed in a color-coded style. 
  * HTTP 2xx is coded blue
  * HTTP 3xx is coded cyan
  * HTTP 4xx is coded magenta
  * HTTP 5xx is coded red
  * HTTP cached is coded black
You can turn off color in siege.conf like this: 'color = off'

=item B<-q>, B<--quiet>

This directive silences $_PROGRAM. It is mostly used for scripting and 
is often used in conjunction with -g/--get. You can detect the success 
or failure of the run with its exit code. 

  siege --quiet -g www.joedog.org
  if [ $? -eq 0 ] ; then
    echo "Success"
  else
    echo "Failure"
  fi

=item B<-g URL>, B<--get=URL>

This option allows you to request a URL and watch the header transaction. 
There is a corresponding config file directive that allows you to set the
request method for these requests: gmethod = HEAD|GET 

  $ siege -g "https://www.joedog.org/"
  HEAD / HTTP/1.0
  Host: www.joedog.org
  Accept: */*
  User-Agent: Mozilla/5.0 (unknown-x86_64-linux-gnu) Siege/4.0.0-beta5
  Connection: close


  HTTP/1.1 200 OK
  Server: cloudflare-nginx
  Date: Tue, 09 Feb 2016 18:18:41 GMT
  Content-Type: text/html; charset=UTF-8
  Connection: close
  Last-Modified: Wed, 25 Nov 2015 18:46:08 GMT
  Cache-Control: max-age=3, must-revalidate
  Expires: Tue, 09 Feb 2016 18:18:44 GMT
  Vary: Accept-Encoding,Cookie
  CF-RAY: 27219407eeff084a-IAD

NOTE: It's best practice to quote the URL when it's passed to $_PROGRAM 
from the the command-line.

=item B<-c NUM>, B<--concurrent=NUM>

This option allows you to set the concurrent number of users. The total 
number of users is technically limited to your computer's resources.

You should not configure more users than your web server is configured 
to handle. For example, the default apache configuration is capped at 
255 threads. If you run siege with -c 1024, then 769 siege users are left
waiting for an apache handler.

For this reason, the default siege configuration is capped at 255 users. 
You can increase that number inside siege.conf but if you make a mess, then
please don't complain to us.

=item B<-r NUM>, B<--reps=NUM|once>

This option tells each siege user how times it should run. The value should 
generally be a number greater than zero but it may be the keyword 'once'. 

If --reps=3 then each siege user will run three times before it exits. However, 
if --reps=once, then each user will run through the urls.txt file exactly one
time. 

For more information about the urls.txt file, see option -f <file>, --file=<file>

=item B<-t NUMm>, B<--time=NUMm>

This option is similar to --reps but instead of specifying the number of times
each user should run, it specifies the amount of time each should run.

The value format is "NUMm", where "NUM" is an amount of time and the "m" modifier 
is either S, M, or H for seconds, minutes and hours.  To run $_PROGRAM for an hour, 
you could select any one of the following combinations: -t3600S, -t60M, -t1H. 
The modifier is not case sensitive, but it does require no space between the number
and itself.

=item B<-d NUM>, B<--delay=NUM>

This option instructs $_PROGRAM how long to delay between each page request.
The value NUM represents the number of seconds between each one. This number
can be a decimal value. In fact the default is half a second (--delay=0.5). 

The time between delay requests is NOT applied toward the transaction time. 
If two 0.1 second transactions have a 2 second delay between them, their average
transaction time is run is 0.1 seconds. It is applied toward the total elapsed
time. In this scenario, the elapsed time would be 2.2 seconds.

NOTE: when the parser is enabled (see: -p/--parser), there is no delay between
the page and its elements, i.e., style sheets, javascripts, etc. The delay is 
only between page requests.

=item B<-b>, B<--benchmark>

This directive tells siege to go into benchmark mode. This means there is no
delay between iterations. 

=item B<-i>, B<--internet>

This option sets siege into what we call internet mode. It makes requests from the
urls.txt file (see: -f <file> / --file=<file>) in random order.

=item B<-f FILE>, B<--file=FILE>

This option tells siege to work with a list of urls inside a text file. The URLs
are listed one per line. Unlike URLs that are passed as a command-line argument,
the URLs in this file should not be quoted.

$_PROGRAM's urls.txt parser supports comments and variables. 

=item B<-R FILE>, B<--rc=FILE>

This directive allows you to set an alternative resource file. By default, the
siegerc file is $HOME/.siege/siege.conf With this directive, you can override 
the default and use an alternative file.

=item B<-L FILE>, B<--log=FILE>

The default log file is $prefix/var/log/siege.log. This directive allows you to
specify and alternative file for logging. 

=item B<-m "string">, B<--mark="string">

This option allows you to log a message to the log file before your stats are 
written there. It is generally used to identify the proceding run. You could, 
for example, mark the file with your command-line parameters so it's understood
what configuration generated the following data.

=item B<-H "header: value">, B<--header="Header: value">

This options allows you to set a custom header in the request. Generally speaking, 
this request will override an existing header. The Cookie header is a special case.
If you set -H "Cookie: value" then siege will send that cookie in addition to the
other ones.

=item B<-A "string">, B<--agent="string">

This option allows you to override the default user-agent with a custom one. 

  siege --agent="JoeDog Jr. in da hizzle"

Will set this header:

  User-agent: JoeDog Jr. in da hizzle

Alternatively, you could set the User-agent with the -H/--header option above.

=item B<-T "text">, B<--content-type="text">

This is another set header shortcut. You use this option to override the default
Content-type request header.

=cut
